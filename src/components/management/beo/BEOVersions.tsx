import React from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { FileText, Download, Calendar, User, Mail } from 'lucide-react';
import { useBEOVersions, useBEOMutations } from '@/hooks/useBEOData';
import { format } from 'date-fns';
import { supabase } from '@/integrations/supabase/client';

interface BEOVersionsProps {
  eventId: string;
}

export const BEOVersions: React.FC<BEOVersionsProps> = ({ eventId }) => {
  const { data: versions = [], isLoading } = useBEOVersions(eventId);
  const { sendBEOEmail } = useBEOMutations(eventId);

  const handleDownload = async (pdfUrl: string, versionNo: number) => {
    try {
      let url = pdfUrl;
      // Legacy records used public URL but the bucket is private
      if (pdfUrl.includes('/storage/v1/object/public/beo-documents/')) {
        const fileName = pdfUrl.split('/beo-documents/')[1];
        const { data, error } = await supabase.functions.invoke('get-beo-signed-url', {
          body: { fileName }
        });
        if (error) throw error;
        if (data?.signedUrl) url = data.signedUrl;
      }

      // Fetch the PDF and download via Blob to avoid Chrome/extension blocking
      const res = await fetch(url, { credentials: 'omit' });
      if (!res.ok) throw new Error('Failed to fetch PDF');
      const blob = await res.blob();
      const objectUrl = URL.createObjectURL(blob);

      const link = document.createElement('a');
      link.href = objectUrl;
      link.download = `BEO-v${versionNo}-${eventId.substring(0, 8)}.pdf`;
      link.rel = 'noopener';
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      URL.revokeObjectURL(objectUrl);
    } catch (error) {
      console.error('Error downloading PDF:', error);
      alert('Failed to download PDF. Please try again.');
    }
  };

  if (isLoading) {
    return (
      <div className="flex items-center justify-center p-8">
        <div className="animate-spin rounded-full h-6 w-6 border-b-2 border-primary"></div>
        <span className="ml-2 text-muted-foreground">Loading BEO versions...</span>
      </div>
    );
  }

  if (versions.length === 0) {
    return (
      <Card>
        <CardContent className="p-8 text-center">
          <FileText className="h-12 w-12 mx-auto text-muted-foreground mb-4" />
          <p className="font-['Work_Sans'] text-muted-foreground">
            No BEO versions have been generated yet. Use the "Generate BEO PDF" button above to create your first version.
          </p>
        </CardContent>
      </Card>
    );
  }

  return (
    <div className="space-y-4">
      <div className="grid gap-4">
        {versions.map((version) => (
          <Card key={version.id} className="border-l-4 border-l-primary">
            <CardHeader className="pb-3">
              <div className="flex items-center justify-between">
                <div className="flex items-center gap-3">
                  <FileText className="h-5 w-5 text-primary" />
                  <div>
                    <CardTitle className="font-['Oswald'] text-lg">
                      BEO Version {version.version_no}
                      {version.is_final && (
                        <Badge variant="secondary" className="ml-2">Final</Badge>
                      )}
                    </CardTitle>
                    <CardDescription className="font-['Work_Sans'] flex items-center gap-2 mt-1">
                      <Calendar className="h-3 w-3" />
                      {format(new Date(version.generated_at), 'dd MMM yyyy, HH:mm')}
                      {version.generated_by && (
                        <>
                          <User className="h-3 w-3 ml-2" />
                          Generated by admin
                        </>
                      )}
                    </CardDescription>
                  </div>
                </div>
                
                <div className="flex items-center gap-2">
                  {version.pdf_url && (
                    <>
                      <Button
                        onClick={() => sendBEOEmail.mutate({
                          versionNo: version.version_no,
                          pdfUrl: version.pdf_url!
                        })}
                        disabled={sendBEOEmail.isPending}
                        variant="default"
                        size="sm"
                      >
                        <Mail className="h-4 w-4 mr-2" />
                        Share via Email
                      </Button>
                      <Button
                        onClick={() => handleDownload(version.pdf_url!, version.version_no)}
                        variant="outline"
                        size="sm"
                      >
                        <Download className="h-4 w-4 mr-2" />
                        Download PDF
                      </Button>
                    </>
                  )}
                </div>
              </div>
            </CardHeader>
            
            {version.notes && (
              <CardContent className="pt-0">
                <div className="bg-muted p-3 rounded-md">
                  <p className="font-['Work_Sans'] text-sm text-muted-foreground">
                    <strong>Notes:</strong> {version.notes}
                  </p>
                </div>
              </CardContent>
            )}
          </Card>
        ))}
      </div>
      
      {versions.length > 0 && (
        <div className="bg-muted p-4 rounded-lg border">
          <div className="flex items-start gap-3">
            <FileText className="h-5 w-5 text-primary mt-0.5" />
            <div>
              <h4 className="font-['Oswald'] font-medium text-sm mb-1">BEO Version History</h4>
              <p className="font-['Work_Sans'] text-sm text-muted-foreground">
                Each version represents a snapshot of your event details at the time of generation. 
                Download any version to share with your team or clients. The most recent version 
                reflects the current state of your event planning.
              </p>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};